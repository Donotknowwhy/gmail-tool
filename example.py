"""
V√≠ d·ª• s·ª≠ d·ª•ng Gmail Tool
"""
from gmail_tool import GmailTool


def example_basic_usage():
    """V√≠ d·ª• s·ª≠ d·ª•ng c∆° b·∫£n"""
    print("=== V√ç D·ª§ S·ª¨ D·ª§NG C∆† B·∫¢N ===")
    
    # Kh·ªüi t·∫°o tool
    tool = GmailTool()
    if not tool.initialize():
        print("‚ùå Kh√¥ng th·ªÉ kh·ªüi t·∫°o tool")
        return
    
    # L·∫•y 50 email m·ªõi nh·∫•t
    print("\n1. L·∫•y email m·ªõi nh·∫•t...")
    emails = tool.fetch_emails(max_results=50)
    
    if emails:
        # Ph√¢n t√≠ch n·ªôi dung
        print("\n2. Ph√¢n t√≠ch n·ªôi dung...")
        analyzed_emails = tool.analyze_emails(emails)
        
        # Hi·ªÉn th·ªã k·∫øt qu·∫£
        print("\n3. Hi·ªÉn th·ªã k·∫øt qu·∫£...")
        tool.display_emails(analyzed_emails, limit=10)
        
        # Xu·∫•t k·∫øt qu·∫£
        print("\n4. Xu·∫•t k·∫øt qu·∫£...")
        tool.export_results(analyzed_emails, "example_results.txt")


def example_advanced_filtering():
    """V√≠ d·ª• l·ªçc n√¢ng cao"""
    print("\n=== V√ç D·ª§ L·ªåC N√ÇNG CAO ===")
    
    tool = GmailTool()
    if not tool.initialize():
        return
    
    # L·∫•y email t·ª´ th√°ng n√†y
    print("\n1. L·∫•y email t·ª´ th√°ng n√†y...")
    emails = tool.fetch_emails(max_results=100)
    
    if emails:
        # L·ªçc email c√≥ ch·ª©a t·ª´ "test" trong ti√™u ƒë·ªÅ
        print("\n2. L·ªçc email c√≥ ch·ª©a 'test' trong ti√™u ƒë·ªÅ...")
        filtered_emails = tool.filter_emails(
            emails, 
            subject_contains='test'
        )
        
        if filtered_emails:
            # Ph√¢n t√≠ch v√† hi·ªÉn th·ªã
            analyzed_emails = tool.analyze_emails(filtered_emails)
            tool.display_emails(analyzed_emails)
        else:
            print("Kh√¥ng t√¨m th·∫•y email n√†o ph√π h·ª£p")


def example_search_specific():
    """V√≠ d·ª• t√¨m ki·∫øm c·ª• th·ªÉ"""
    print("\n=== V√ç D·ª§ T√åM KI·∫æM C·ª§ TH·ªÇ ===")
    
    tool = GmailTool()
    if not tool.initialize():
        return
    
    # T√¨m email t·ª´ m·ªôt ng∆∞·ªùi c·ª• th·ªÉ
    print("\n1. T√¨m email t·ª´ ng∆∞·ªùi g·ª≠i c·ª• th·ªÉ...")
    emails = tool.fetch_emails(query="from:example@gmail.com")
    
    if emails:
        # L·ªçc email trong tu·∫ßn qua
        print("\n2. L·ªçc email trong tu·∫ßn qua...")
        from datetime import datetime, timedelta
        week_ago = (datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')
        
        filtered_emails = tool.filter_emails(
            emails,
            date_from=week_ago
        )
        
        if filtered_emails:
            analyzed_emails = tool.analyze_emails(filtered_emails)
            tool.display_emails(analyzed_emails)
        else:
            print("Kh√¥ng c√≥ email n√†o trong tu·∫ßn qua")


def example_custom_keywords():
    """V√≠ d·ª• v·ªõi t·ª´ kh√≥a t√πy ch·ªânh"""
    print("\n=== V√ç D·ª§ V·ªöI T·ª™ KH√ìA T√ôY CH·ªàNH ===")
    
    tool = GmailTool()
    if not tool.initialize():
        return
    
    # C·∫≠p nh·∫≠t t·ª´ kh√≥a ph√¢n t√≠ch
    tool.analyzer.update_keywords(
        complete_keywords=['success', 'done', 'completed', 'finished'],
        error_keywords=['error', 'failed', 'issue', 'problem']
    )
    
    # L·∫•y email v√† ph√¢n t√≠ch
    emails = tool.fetch_emails(max_results=50)
    if emails:
        analyzed_emails = tool.analyze_emails(emails)
        
        # Hi·ªÉn th·ªã ch·ªâ email c√≥ tr·∫°ng th√°i COMPLETE ho·∫∑c ERROR
        complete_emails = [e for e in analyzed_emails if e.get('status') == 'COMPLETE']
        error_emails = [e for e in analyzed_emails if e.get('status') == 'ERROR']
        
        print(f"\nüìä T√¨m th·∫•y {len(complete_emails)} email COMPLETE v√† {len(error_emails)} email ERROR")
        
        if complete_emails:
            print("\n‚úÖ EMAIL COMPLETE:")
            tool.display_emails(complete_emails, limit=5)
        
        if error_emails:
            print("\n‚ùå EMAIL ERROR:")
            tool.display_emails(error_emails, limit=5)


if __name__ == "__main__":
    print("üéØ GMAIL TOOL - V√ç D·ª§ S·ª¨ D·ª§NG")
    print("="*50)
    
    try:
        # Ch·∫°y c√°c v√≠ d·ª•
        example_basic_usage()
        example_advanced_filtering()
        example_search_specific()
        example_custom_keywords()
        
        print("\n‚úÖ Ho√†n th√†nh t·∫•t c·∫£ v√≠ d·ª•!")
        
    except KeyboardInterrupt:
        print("\nüëã ƒê√£ d·ª´ng ch∆∞∆°ng tr√¨nh")
    except Exception as e:
        print(f"\n‚ùå L·ªói: {str(e)}")
        print("Vui l√≤ng ki·ªÉm tra file credentials.json v√† k·∫øt n·ªëi internet")
