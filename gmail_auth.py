"""
Module x√°c th·ª±c Gmail API
"""
import os
import pickle
from google.auth.transport.requests import Request
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from config import SCOPES, CREDENTIALS_FILE, TOKEN_FILE


class GmailAuthenticator:
    def __init__(self):
        self.service = None
        self.creds = None
    
    def authenticate(self):
        """X√°c th·ª±c v·ªõi Gmail API"""
        # Ki·ªÉm tra token ƒë√£ l∆∞u
        if os.path.exists(TOKEN_FILE):
            with open(TOKEN_FILE, 'rb') as token:
                self.creds = pickle.load(token)
        
        # N·∫øu kh√¥ng c√≥ credentials h·ª£p l·ªá, y√™u c·∫ßu ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p
        if not self.creds or not self.creds.valid:
            if self.creds and self.creds.expired and self.creds.refresh_token:
                self.creds.refresh(Request())
            else:
                if not os.path.exists(CREDENTIALS_FILE):
                    print(f"‚ùå Kh√¥ng t√¨m th·∫•y file {CREDENTIALS_FILE}")
                    print("\nüìã H∆Ø·ªöNG D·∫™N T·∫†O FILE CREDENTIALS:")
                    print("1. V√†o https://console.cloud.google.com/")
                    print("2. Ch·ªçn project ‚Üí APIs & Services ‚Üí Credentials")
                    print("3. Create Credentials ‚Üí OAuth client ID")
                    print("4. Ch·ªçn 'Desktop application'")
                    print("5. T·∫£i file JSON v√† ƒë·∫∑t t√™n 'credentials.json'")
                    print("6. Copy file v√†o th∆∞ m·ª•c:", os.getcwd())
                    print("\nüí° L∆∞u √Ω: File ph·∫£i c√≥ t√™n ch√≠nh x√°c 'credentials.json'")
                    return False
                
                try:
                    flow = InstalledAppFlow.from_client_secrets_file(
                        CREDENTIALS_FILE, SCOPES)
                    self.creds = flow.run_local_server(port=0)
                except Exception as e:
                    print(f"‚ùå L·ªói x√°c th·ª±c: {str(e)}")
                    print("\nüîß KH·∫ÆC PH·ª§C L·ªñI 400:")
                    print("1. Ki·ªÉm tra OAuth consent screen:")
                    print("   - V√†o https://console.cloud.google.com/")
                    print("   - APIs & Services ‚Üí OAuth consent screen")
                    print("   - ƒê·∫£m b·∫£o app status l√† 'In production' ho·∫∑c 'Testing'")
                    print("   - N·∫øu 'Testing': Th√™m email v√†o 'Test users'")
                    print("2. Ki·ªÉm tra Gmail API ƒë√£ ƒë∆∞·ª£c b·∫≠t")
                    print("3. T·∫°o l·∫°i OAuth credentials n·∫øu c·∫ßn")
                    return False
            
            # L∆∞u credentials cho l·∫ßn sau
            with open(TOKEN_FILE, 'wb') as token:
                pickle.dump(self.creds, token)
        
        # T·∫°o service object
        self.service = build('gmail', 'v1', credentials=self.creds)
        return True
    
    def get_service(self):
        """Tr·∫£ v·ªÅ Gmail service object"""
        return self.service
